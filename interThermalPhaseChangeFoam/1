In file included from interThermalPhaseChangeFoam.C:72:
createFields.H: In function ‘int main(int, char**)’:
createFields.H:168:62: warning: ‘Foam::dimensioned<Type>::dimensioned(Foam::Istream&) [with Type = double]’ is deprecated: Since 2018-11 [-Wdeprecated-declarations]
  168 |         dimensionedScalar(transportProperties.lookup("sigma"))
      |                                                              ^
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:305:1: note: declared here
  305 | Foam::dimensioned<Type>::dimensioned(Istream& is)
      | ^~~~
In file included from interThermalPhaseChangeFoam.C:72:
createFields.H:183:60: warning: ‘Foam::dimensioned<Type>::dimensioned(Foam::Istream&) [with Type = double]’ is deprecated: Since 2018-11 [-Wdeprecated-declarations]
  183 |         dimensionedScalar(transportProperties.lookup("T_0"))
      |                                                            ^
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:305:1: note: declared here
  305 | Foam::dimensioned<Type>::dimensioned(Istream& is)
      | ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C: In instantiation of ‘void Foam::MULES::limiter(Foam::scalarField&, const RdeltaTType&, const RhoType&, const volScalarField&, const surfaceScalarField&, const surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RdeltaTType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = int; PsiMinType = int; Foam::scalarField = Foam::Field<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:634:5:   required from ‘void Foam::MULES::limit(const RdeltaTType&, const RhoType&, const volScalarField&, const surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&, bool) [with RdeltaTType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = int; PsiMinType = int; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:173:14:   required from ‘void Foam::MULES::explicitSolve(const RhoType&, Foam::volScalarField&, const surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = int; PsiMinType = int; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
alphaEqn.H:60:9:   required from here
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:359:32: error: subscripted value is neither array nor pointer
  359 |                        *(psiMax[pfCelli] - psiMin[pfCelli]);
      |                          ~~~~~~^
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:359:50: error: subscripted value is neither array nor pointer
  359 |                        *(psiMax[pfCelli] - psiMin[pfCelli]);
      |                                            ~~~~~~^
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: error: no matching function for call to ‘min(Foam::tmp<Foam::Field<double> >, const int&)’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int8_t Foam::min(int8_t, int8_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int16_t Foam::min(int16_t, int16_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int32_t Foam::min(int32_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int32_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint8_t Foam::min(uint8_t, uint8_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint16_t Foam::min(uint16_t, uint16_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint32_t Foam::min(uint32_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint32_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(float, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(long int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(long int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:13: note: candidate: ‘Foam::zero Foam::min(const Foam::zero&, const Foam::zero&)’
   99 | inline zero min(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
   99 | inline zero min(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::zero&, const Type&)’
  105 | inline Type min(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator+(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::zero&)’
  111 | inline Type min(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:29: note: candidate: ‘constexpr const Foam::one& Foam::min(const Foam::one&, const Foam::one&)’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::one&, const Type&)’
  112 | inline Type min(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator+(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::one&)’
  118 | inline Type min(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::one&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:7: note: candidate: ‘Foam::label Foam::min(const labelHashSet&, Foam::label)’
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::min(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  652 | inline Form min
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:23: note: candidate: ‘const Foam::complex& Foam::min(const Foam::complex&, const Foam::complex&)’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note: candidate: ‘template<class Type> Type Foam::min(const Foam::UList<T>&)’
  376 | Type min(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note: candidate: ‘template<class Type> Type Foam::min(const Foam::tmp<Foam::Field<Type> >&)’
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note:   template argument deduction/substitution failed:
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   candidate expects 1 argument, 2 provided
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:14: note: candidate: ‘Foam::dimensionSet Foam::min(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::min(const Foam::Matrix<Form, Type>&)’
  670 | const Type& min(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::min(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  770 | Foam::dimensioned<Type> Foam::min
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:14: note: candidate: ‘Foam::orientedType Foam::min(const Foam::orientedType&, const Foam::orientedType&)’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::DimensionedField<Type, GeoMesh>&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::FieldField<Field, Type>&)’
  470 | Type min(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note:   template argument deduction/substitution failed:
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::min(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   39 | inline UniformField<Type> min
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const Foam::UniformField<Type>&, const OtherType&)’
   50 | inline OtherType min(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const OtherType&, const Foam::UniformField<Type>&)’
   57 | inline OtherType min(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: error: no matching function for call to ‘max(Foam::tmp<Foam::Field<double> >, const int&)’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int8_t Foam::max(int8_t, int8_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int16_t Foam::max(int16_t, int16_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int32_t Foam::max(int32_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int32_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint8_t Foam::max(uint8_t, uint8_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint16_t Foam::max(uint16_t, uint16_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint32_t Foam::max(uint32_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint32_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(float, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(long int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(long int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:13: note: candidate: ‘Foam::zero Foam::max(const Foam::zero&, const Foam::zero&)’
  116 | inline zero max(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
  116 | inline zero max(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::zero&, const Type&)’
  122 | inline Type max(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator-(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::zero&)’
  128 | inline Type max(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:29: note: candidate: ‘constexpr const Foam::one& Foam::max(const Foam::one&, const Foam::one&)’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::one&, const Type&)’
  129 | inline Type max(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator-(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::one&)’
  135 | inline Type max(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::one&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:7: note: candidate: ‘Foam::label Foam::max(const labelHashSet&, Foam::label)’
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::max(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  639 | inline Form max
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:23: note: candidate: ‘const Foam::complex& Foam::max(const Foam::complex&, const Foam::complex&)’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note: candidate: ‘template<class Type> Type Foam::max(const Foam::UList<T>&)’
  361 | Type max(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note: candidate: ‘template<class Type> Type Foam::max(const Foam::tmp<Foam::Field<Type> >&)’
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note:   template argument deduction/substitution failed:
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   candidate expects 1 argument, 2 provided
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:14: note: candidate: ‘Foam::dimensionSet Foam::max(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::max(const Foam::Matrix<Form, Type>&)’
  656 | const Type& max(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::max(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  747 | Foam::dimensioned<Type> Foam::max
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.H:299,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/solverPerformance.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/data.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:60,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note: candidate: ‘template<class Type> Foam::SolverPerformance<Type> Foam::max(const Foam::SolverPerformance<Type>&, const Foam::SolverPerformance<Type>&)’
  182 | typename Foam::SolverPerformance<Type> Foam::max
      |                                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::SolverPerformance<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:14: note: candidate: ‘Foam::orientedType Foam::max(const Foam::orientedType&, const Foam::orientedType&)’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::DimensionedField<Type, GeoMesh>&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::FieldField<Field, Type>&)’
  450 | Type max(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note:   template argument deduction/substitution failed:
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::max(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   64 | inline UniformField<Type> max
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const Foam::UniformField<Type>&, const OtherType&)’
   75 | inline OtherType max(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const OtherType&, const Foam::UniformField<Type>&)’
   82 | inline OtherType max(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: error: no matching function for call to ‘min(Foam::tmp<Foam::Field<double> >, const int&)’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int8_t Foam::min(int8_t, int8_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int16_t Foam::min(int16_t, int16_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int32_t Foam::min(int32_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int32_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint8_t Foam::min(uint8_t, uint8_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint16_t Foam::min(uint16_t, uint16_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint32_t Foam::min(uint32_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint32_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(float, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(long int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(long int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:13: note: candidate: ‘Foam::zero Foam::min(const Foam::zero&, const Foam::zero&)’
   99 | inline zero min(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
   99 | inline zero min(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::zero&, const Type&)’
  105 | inline Type min(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::zero&)’
  111 | inline Type min(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:29: note: candidate: ‘constexpr const Foam::one& Foam::min(const Foam::one&, const Foam::one&)’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::one&, const Type&)’
  112 | inline Type min(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::one&)’
  118 | inline Type min(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:7: note: candidate: ‘Foam::label Foam::min(const labelHashSet&, Foam::label)’
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::min(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  652 | inline Form min
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:23: note: candidate: ‘const Foam::complex& Foam::min(const Foam::complex&, const Foam::complex&)’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note: candidate: ‘template<class Type> Type Foam::min(const Foam::UList<T>&)’
  376 | Type min(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note: candidate: ‘template<class Type> Type Foam::min(const Foam::tmp<Foam::Field<Type> >&)’
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note:   template argument deduction/substitution failed:
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   candidate expects 1 argument, 2 provided
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:14: note: candidate: ‘Foam::dimensionSet Foam::min(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::min(const Foam::Matrix<Form, Type>&)’
  670 | const Type& min(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::min(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  770 | Foam::dimensioned<Type> Foam::min
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:14: note: candidate: ‘Foam::orientedType Foam::min(const Foam::orientedType&, const Foam::orientedType&)’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::DimensionedField<Type, GeoMesh>&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::FieldField<Field, Type>&)’
  470 | Type min(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note:   template argument deduction/substitution failed:
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::min(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   39 | inline UniformField<Type> min
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const Foam::UniformField<Type>&, const OtherType&)’
   50 | inline OtherType min(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const OtherType&, const Foam::UniformField<Type>&)’
   57 | inline OtherType min(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: error: no matching function for call to ‘max(Foam::tmp<Foam::Field<double> >, const int&)’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int8_t Foam::max(int8_t, int8_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int16_t Foam::max(int16_t, int16_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int32_t Foam::max(int32_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int32_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint8_t Foam::max(uint8_t, uint8_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint16_t Foam::max(uint16_t, uint16_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint32_t Foam::max(uint32_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint32_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(float, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(long int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(long int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:13: note: candidate: ‘Foam::zero Foam::max(const Foam::zero&, const Foam::zero&)’
  116 | inline zero max(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
  116 | inline zero max(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::zero&, const Type&)’
  122 | inline Type max(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::zero&)’
  128 | inline Type max(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:29: note: candidate: ‘constexpr const Foam::one& Foam::max(const Foam::one&, const Foam::one&)’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::one&, const Type&)’
  129 | inline Type max(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::one&)’
  135 | inline Type max(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:7: note: candidate: ‘Foam::label Foam::max(const labelHashSet&, Foam::label)’
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::max(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  639 | inline Form max
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:23: note: candidate: ‘const Foam::complex& Foam::max(const Foam::complex&, const Foam::complex&)’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note: candidate: ‘template<class Type> Type Foam::max(const Foam::UList<T>&)’
  361 | Type max(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note: candidate: ‘template<class Type> Type Foam::max(const Foam::tmp<Foam::Field<Type> >&)’
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note:   template argument deduction/substitution failed:
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   candidate expects 1 argument, 2 provided
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:14: note: candidate: ‘Foam::dimensionSet Foam::max(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::max(const Foam::Matrix<Form, Type>&)’
  656 | const Type& max(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::max(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  747 | Foam::dimensioned<Type> Foam::max
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.H:299,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/solverPerformance.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/data.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:60,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note: candidate: ‘template<class Type> Foam::SolverPerformance<Type> Foam::max(const Foam::SolverPerformance<Type>&, const Foam::SolverPerformance<Type>&)’
  182 | typename Foam::SolverPerformance<Type> Foam::max
      |                                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::SolverPerformance<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:14: note: candidate: ‘Foam::orientedType Foam::max(const Foam::orientedType&, const Foam::orientedType&)’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::DimensionedField<Type, GeoMesh>&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::FieldField<Field, Type>&)’
  450 | Type max(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note:   template argument deduction/substitution failed:
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::max(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   64 | inline UniformField<Type> max
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const Foam::UniformField<Type>&, const OtherType&)’
   75 | inline OtherType max(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const OtherType&, const Foam::UniformField<Type>&)’
   82 | inline OtherType max(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C: In instantiation of ‘void Foam::MULES::limiter(Foam::scalarField&, const RdeltaTType&, const RhoType&, const volScalarField&, const surfaceScalarField&, const surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RdeltaTType = double; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = int; PsiMinType = int; Foam::scalarField = Foam::Field<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:634:5:   required from ‘void Foam::MULES::limit(const RdeltaTType&, const RhoType&, const volScalarField&, const surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&, bool) [with RdeltaTType = double; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = int; PsiMinType = int; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:179:14:   required from ‘void Foam::MULES::explicitSolve(const RhoType&, Foam::volScalarField&, const surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = int; PsiMinType = int; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
alphaEqn.H:60:9:   required from here
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:359:32: error: subscripted value is neither array nor pointer
  359 |                        *(psiMax[pfCelli] - psiMin[pfCelli]);
      |                          ~~~~~~^
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:359:50: error: subscripted value is neither array nor pointer
  359 |                        *(psiMax[pfCelli] - psiMin[pfCelli]);
      |                                            ~~~~~~^
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: error: no matching function for call to ‘min(Foam::tmp<Foam::Field<double> >, const int&)’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int8_t Foam::min(int8_t, int8_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int16_t Foam::min(int16_t, int16_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int32_t Foam::min(int32_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int32_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint8_t Foam::min(uint8_t, uint8_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint16_t Foam::min(uint16_t, uint16_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint32_t Foam::min(uint32_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint32_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(float, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(long int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(long int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:13: note: candidate: ‘Foam::zero Foam::min(const Foam::zero&, const Foam::zero&)’
   99 | inline zero min(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
   99 | inline zero min(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::zero&, const Type&)’
  105 | inline Type min(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator+(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::zero&)’
  111 | inline Type min(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:29: note: candidate: ‘constexpr const Foam::one& Foam::min(const Foam::one&, const Foam::one&)’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::one&, const Type&)’
  112 | inline Type min(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator+(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::one&)’
  118 | inline Type min(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::one&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:7: note: candidate: ‘Foam::label Foam::min(const labelHashSet&, Foam::label)’
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::min(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  652 | inline Form min
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:23: note: candidate: ‘const Foam::complex& Foam::min(const Foam::complex&, const Foam::complex&)’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note: candidate: ‘template<class Type> Type Foam::min(const Foam::UList<T>&)’
  376 | Type min(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note: candidate: ‘template<class Type> Type Foam::min(const Foam::tmp<Foam::Field<Type> >&)’
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note:   template argument deduction/substitution failed:
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   candidate expects 1 argument, 2 provided
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:14: note: candidate: ‘Foam::dimensionSet Foam::min(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::min(const Foam::Matrix<Form, Type>&)’
  670 | const Type& min(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::min(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  770 | Foam::dimensioned<Type> Foam::min
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:14: note: candidate: ‘Foam::orientedType Foam::min(const Foam::orientedType&, const Foam::orientedType&)’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::DimensionedField<Type, GeoMesh>&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::FieldField<Field, Type>&)’
  470 | Type min(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note:   template argument deduction/substitution failed:
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::min(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   39 | inline UniformField<Type> min
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const Foam::UniformField<Type>&, const OtherType&)’
   50 | inline OtherType min(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const OtherType&, const Foam::UniformField<Type>&)’
   57 | inline OtherType min(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:386:18: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: error: no matching function for call to ‘max(Foam::tmp<Foam::Field<double> >, const int&)’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int8_t Foam::max(int8_t, int8_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int16_t Foam::max(int16_t, int16_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int32_t Foam::max(int32_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int32_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint8_t Foam::max(uint8_t, uint8_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint16_t Foam::max(uint16_t, uint16_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint32_t Foam::max(uint32_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint32_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(float, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(long int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(long int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:13: note: candidate: ‘Foam::zero Foam::max(const Foam::zero&, const Foam::zero&)’
  116 | inline zero max(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
  116 | inline zero max(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::zero&, const Type&)’
  122 | inline Type max(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator-(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::zero&)’
  128 | inline Type max(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:29: note: candidate: ‘constexpr const Foam::one& Foam::max(const Foam::one&, const Foam::one&)’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::one&, const Type&)’
  129 | inline Type max(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator-(const Foam::UList<double>&, const scalar&)((((Foam::scalar)extremaCoeff) * (Foam::scalar)((int)psiMax - (int)psiMin)))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::one&)’
  135 | inline Type max(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::one&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:7: note: candidate: ‘Foam::label Foam::max(const labelHashSet&, Foam::label)’
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::max(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  639 | inline Form max
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:23: note: candidate: ‘const Foam::complex& Foam::max(const Foam::complex&, const Foam::complex&)’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note: candidate: ‘template<class Type> Type Foam::max(const Foam::UList<T>&)’
  361 | Type max(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note: candidate: ‘template<class Type> Type Foam::max(const Foam::tmp<Foam::Field<Type> >&)’
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note:   template argument deduction/substitution failed:
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   candidate expects 1 argument, 2 provided
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:14: note: candidate: ‘Foam::dimensionSet Foam::max(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::max(const Foam::Matrix<Form, Type>&)’
  656 | const Type& max(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::max(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  747 | Foam::dimensioned<Type> Foam::max
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.H:299,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/solverPerformance.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/data.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:60,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note: candidate: ‘template<class Type> Foam::SolverPerformance<Type> Foam::max(const Foam::SolverPerformance<Type>&, const Foam::SolverPerformance<Type>&)’
  182 | typename Foam::SolverPerformance<Type> Foam::max
      |                                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::SolverPerformance<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:14: note: candidate: ‘Foam::orientedType Foam::max(const Foam::orientedType&, const Foam::orientedType&)’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::DimensionedField<Type, GeoMesh>&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::FieldField<Field, Type>&)’
  450 | Type max(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note:   template argument deduction/substitution failed:
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::max(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   64 | inline UniformField<Type> max
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const Foam::UniformField<Type>&, const OtherType&)’
   75 | inline OtherType max(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const OtherType&, const Foam::UniformField<Type>&)’
   82 | inline OtherType max(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:387:18: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: error: no matching function for call to ‘min(Foam::tmp<Foam::Field<double> >, const int&)’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int8_t Foam::min(int8_t, int8_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int16_t Foam::min(int16_t, int16_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int32_t Foam::min(int32_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int32_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int32_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:16: note: candidate: ‘int64_t Foam::min(int64_t, int64_t)’
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:52:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   52 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint8_t Foam::min(uint8_t, uint8_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint16_t Foam::min(uint16_t, uint16_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint32_t Foam::min(uint32_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint32_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint32_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint64_t)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(float, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(double, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘double Foam::min(long int, double)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(float, long int)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘float Foam::min(long int, float)’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   54 | inline retType min(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:13: note: candidate: ‘Foam::zero Foam::min(const Foam::zero&, const Foam::zero&)’
   99 | inline zero min(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:99:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
   99 | inline zero min(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::zero&, const Type&)’
  105 | inline Type min(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:105:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::zero&)’
  111 | inline Type min(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:111:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:29: note: candidate: ‘constexpr const Foam::one& Foam::min(const Foam::one&, const Foam::one&)’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:106:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note: candidate: ‘template<class Type> Type Foam::min(const Foam::one&, const Type&)’
  112 | inline Type min(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:112:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const Foam::one&)’
  118 | inline Type min(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:118:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const int’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:7: note: candidate: ‘Foam::label Foam::min(const labelHashSet&, Foam::label)’
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:417:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  417 | label min(const labelHashSet& set, label minValue = labelMax);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::min(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  652 | inline Form min
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:652:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:23: note: candidate: ‘const Foam::complex& Foam::min(const Foam::complex&, const Foam::complex&)’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:241:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  241 | inline const complex& min(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note: candidate: ‘template<class Type> Type Foam::min(const Foam::UList<T>&)’
  376 | Type min(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:376:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note: candidate: ‘template<class Type> Type Foam::min(const Foam::tmp<Foam::Field<Type> >&)’
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:388:26: note:   template argument deduction/substitution failed:
  388 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   candidate expects 1 argument, 2 provided
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:661:35: note:   template argument deduction/substitution failed:
  661 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::UList<T>&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> void Foam::min(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::UList<T>&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:40: note:   template argument deduction/substitution failed:
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:666:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  666 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:14: note: candidate: ‘Foam::dimensionSet Foam::min(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:298:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  298 | dimensionSet min(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::min(const Foam::Matrix<Form, Type>&)’
  670 | const Type& min(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:670:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::min(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  770 | Foam::dimensioned<Type> Foam::min
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:770:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:14: note: candidate: ‘Foam::orientedType Foam::min(const Foam::orientedType&, const Foam::orientedType&)’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:153:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  153 | orientedType min(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::DimensionedField<Type, GeoMesh>&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:326:32: note:   template argument deduction/substitution failed:
  326 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:338:35: note:   template argument deduction/substitution failed:
  338 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:40: note:   template argument deduction/substitution failed:
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:343:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  343 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::FieldField<Field, Type>&)’
  470 | Type min(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:470:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:485:26: note:   template argument deduction/substitution failed:
  485 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:634:35: note:   template argument deduction/substitution failed:
  634 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::FieldField<Field, Type>&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::FieldField<Field, Type>&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:40: note:   template argument deduction/substitution failed:
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:639:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  639 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:499:46: note:   template argument deduction/substitution failed:
  499 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:541:35: note:   template argument deduction/substitution failed:
  541 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:40: note:   template argument deduction/substitution failed:
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:546:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  546 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::min(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   39 | inline UniformField<Type> min
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const Foam::UniformField<Type>&, const OtherType&)’
   50 | inline OtherType min(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const OtherType&, const Foam::UniformField<Type>&)’
   57 | inline OtherType min(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: error: no matching function for call to ‘max(Foam::tmp<Foam::Field<double> >, const int&)’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/label.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int8_t Foam::max(int8_t, int8_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:64:1: note: in expansion of macro ‘MAXMIN’
   64 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int16_t Foam::max(int16_t, int16_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int32_t Foam::max(int32_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:67:1: note: in expansion of macro ‘MAXMIN’
   67 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int32_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int32_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:16: note: candidate: ‘int64_t Foam::max(int64_t, int64_t)’
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:58:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   58 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint8_t Foam::max(uint8_t, uint8_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint16_t Foam::max(uint16_t, uint16_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint32_t Foam::max(uint32_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint32_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint32_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint64_t)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(float, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:67:1: note: in expansion of macro ‘MAXMINPOW’
   67 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(double, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:68:1: note: in expansion of macro ‘MAXMINPOW’
   68 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘double Foam::max(long int, double)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:69:1: note: in expansion of macro ‘MAXMINPOW’
   69 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:70:1: note: in expansion of macro ‘MAXMINPOW’
   70 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:71:1: note: in expansion of macro ‘MAXMINPOW’
   71 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:72:1: note: in expansion of macro ‘MAXMINPOW’
   72 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(float, long int)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:73:1: note: in expansion of macro ‘MAXMINPOW’
   73 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘float Foam::max(long int, float)’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   60 | inline retType max(const type1 s1, const type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:54:1: note: in expansion of macro ‘MAXMIN’
   54 | MAXMIN(retType, type1, type2)                           \
      | ^~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/doubleFloat.H:74:1: note: in expansion of macro ‘MAXMINPOW’
   74 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:13: note: candidate: ‘Foam::zero Foam::max(const Foam::zero&, const Foam::zero&)’
  116 | inline zero max(const zero&, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:116:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
  116 | inline zero max(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::zero&, const Type&)’
  122 | inline Type max(const zero&, const Type& t)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:122:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zero.H:157,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::zero&)’
  128 | inline Type max(const Type& t, const zero&)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/zeroI.H:128:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:29: note: candidate: ‘constexpr const Foam::one& Foam::max(const Foam::one&, const Foam::one&)’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:123:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note: candidate: ‘template<class Type> Type Foam::max(const Foam::one&, const Type&)’
  129 | inline Type max(const one&, const Type& t) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:129:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:37: note:   cannot convert ‘Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&) [with Type1 = double; Type2 = double; typename Foam::typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const Foam::UList<T>&) [with Type = double; Foam::scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/one.H:193,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UList.H:52,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/List.H:46,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/labelList.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const Foam::one&)’
  135 | inline Type max(const Type& t, const one&) noexcept
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/oneI.H:135:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const int’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/ListOps.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UPstream.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:7: note: candidate: ‘Foam::label Foam::max(const labelHashSet&, Foam::label)’
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/HashSet.H:421:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  421 | label max(const labelHashSet& set, label maxValue = labelMin);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Vector2D.H:44,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/vector2D.H:42,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/PstreamReduceOps.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/exchange.C:34,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Pstream.H:390,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/parRun.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::max(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)’
  639 | inline Form max
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/VectorSpaceI.H:639:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complex.H:389,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/tensor.H:51,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/symmTensor.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/fieldTypes.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/stringListOps.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/objectRegistry.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:23: note: candidate: ‘const Foam::complex& Foam::max(const Foam::complex&, const Foam::complex&)’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                       ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/complexI.H:252:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  252 | inline const complex& max(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note: candidate: ‘template<class Type> Type Foam::max(const Foam::UList<T>&)’
  361 | Type max(const UList<Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:361:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note: candidate: ‘template<class Type> Type Foam::max(const Foam::tmp<Foam::Field<Type> >&)’
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:373:26: note:   template argument deduction/substitution failed:
  373 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:353:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  353 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   candidate expects 1 argument, 2 provided
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:93:6: note: in definition of macro ‘BINARY_FUNCTION’
   93 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:107:24: note: in definition of macro ‘BINARY_FUNCTION’
  107 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:119:24: note: in definition of macro ‘BINARY_FUNCTION’
  119 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<T>&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:132:24: note: in definition of macro ‘BINARY_FUNCTION’
  132 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type> >&)’
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:660:35: note:   template argument deduction/substitution failed:
  660 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:145:24: note: in definition of macro ‘BINARY_FUNCTION’
  145 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:164:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  164 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::UList<T>&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:178:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  178 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::UList<T>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const Foam::tmp<Foam::Field<Type> >&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  190 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> void Foam::max(Foam::Field<Type>&, const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  206 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::UList<T>&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:220:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  220 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.C:728,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Field.H:434,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Foam::tmp<Foam::Field<Type> >&, const Type&)’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:40: note:   template argument deduction/substitution failed:
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctionsM.C:232:24: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  232 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFunctions.C:665:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  665 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘int’)
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:14: note: candidate: ‘Foam::dimensionSet Foam::max(const Foam::dimensionSet&, const Foam::dimensionSet&)’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:299:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  299 | dimensionSet max(const dimensionSet& ds1, const dimensionSet& ds2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.H:604,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSets.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionSet.H:373,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::max(const Foam::Matrix<Form, Type>&)’
  656 | const Type& max(const Matrix<Form, Type>& mat)
      |             ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Matrix.C:656:13: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.H:571,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/Time.H:50,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:6,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::max(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)’
  747 | Foam::dimensioned<Type> Foam::max
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/dimensionedType.C:747:25: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.H:299,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/solverPerformance.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/data.H:45,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:60,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note: candidate: ‘template<class Type> Foam::SolverPerformance<Type> Foam::max(const Foam::SolverPerformance<Type>&, const Foam::SolverPerformance<Type>&)’
  182 | typename Foam::SolverPerformance<Type> Foam::max
      |                                        ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/SolverPerformance.C:182:40: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::SolverPerformance<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:47,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:14: note: candidate: ‘Foam::orientedType Foam::max(const Foam::orientedType&, const Foam::orientedType&)’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/orientedType.H:152:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  152 | orientedType max(const orientedType& ot1, const orientedType& ot2);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::DimensionedField<Type, GeoMesh>&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  301 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:325:32: note:   template argument deduction/substitution failed:
  325 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:315:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  315 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:144:44: note: in definition of macro ‘BINARY_FUNCTION’
  144 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:171:44: note: in definition of macro ‘BINARY_FUNCTION’
  171 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<Type, GeoMesh>&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:196:44: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:337:35: note:   template argument deduction/substitution failed:
  337 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:223:44: note: in definition of macro ‘BINARY_FUNCTION’
  223 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:256:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  256 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::DimensionedField<Type, GeoMesh>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:283:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  283 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:294:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:319:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  319 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:332:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  332 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::DimensionedField<Type, GeoMesh>&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:359:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  359 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:370:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  370 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.C:590,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedField.H:420,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvMesh.H:61,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:7,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Type&)’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:40: note:   template argument deduction/substitution failed:
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:395:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  395 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:342:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  342 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::FieldField<Field, Type>&)’
  450 | Type max(const FieldField<Field, Type>& f)
      |      ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:450:6: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note:   template argument deduction/substitution failed:
  466 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:442:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  442 | returnType func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:124:6: note: in definition of macro ‘BINARY_FUNCTION’
  124 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:138:36: note: in definition of macro ‘BINARY_FUNCTION’
  138 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:153:36: note: in definition of macro ‘BINARY_FUNCTION’
  153 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, Type>&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:169:36: note: in definition of macro ‘BINARY_FUNCTION’
  169 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:633:35: note:   template argument deduction/substitution failed:
  633 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:185:36: note: in definition of macro ‘BINARY_FUNCTION’
  185 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:208:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  208 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::FieldField<Field, Type>&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:222:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  222 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const Foam::tmp<Foam::FieldField<Field, Type> >&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:237:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  237 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:256:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  256 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::FieldField<Field, Type>&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:270:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  270 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.C:412,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldField.H:210,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:48,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Type&)’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:40: note:   template argument deduction/substitution failed:
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:285:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:638:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  638 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:466:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  466 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:498:46: note:   template argument deduction/substitution failed:
  498 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:488:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  488 | dimensioned<returnType> func                                                   \
      |                         ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:176:6: note: in definition of macro ‘BINARY_FUNCTION’
  176 | void Func                                                                      \
      |      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:200:54: note: in definition of macro ‘BINARY_FUNCTION’
  200 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:228:54: note: in definition of macro ‘BINARY_FUNCTION’
  228 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:253:54: note: in definition of macro ‘BINARY_FUNCTION’
  253 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:540:35: note:   template argument deduction/substitution failed:
  540 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:278:54: note: in definition of macro ‘BINARY_FUNCTION’
  278 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:312:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  312 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:326:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::GeometricField<Type, PatchField, GeoMesh>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:354:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  354 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:365:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  365 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:390:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  390 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:403:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  403 | void Func                                                                      \
      |      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:417:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  417 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:445:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  445 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:456:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  456 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.C:1376,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricField.H:790,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/volFields.H:39,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:309,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvc.H:41,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/fvCFD.H:8,
                 from interThermalPhaseChangeFoam.C:44:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:40: note:   template argument deduction/substitution failed:
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:481:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  481 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:545:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  545 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::max(const Foam::UniformField<Type>&, const Foam::UniformField<Type>&)’
   64 | inline UniformField<Type> max
      |                           ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const Foam::UniformField<Type>&, const OtherType&)’
   75 | inline OtherType max(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:56,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const OtherType&, const Foam::UniformField<Type>&)’
   82 | inline OtherType max(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/usr/lib/openfoam/openfoam2012/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note:   template argument deduction/substitution failed:
In file included from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULES.H:227,
                 from /usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/CMULES.H:50,
                 from interThermalPhaseChangeFoam.C:46:
/usr/lib/openfoam/openfoam2012/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘const Foam::UniformField<Type>’ and ‘const int’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
make: *** [/usr/lib/openfoam/openfoam2012/wmake/rules/General/transform:35: Make/linux64GccDPInt32Opt/interThermalPhaseChangeFoam.o] Error 1
